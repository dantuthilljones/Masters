// Loadable modules
//
// Generated by /home/dan/Documents/ParaView/paraview_build/bin/vtkkwProcessXML-pv5.4
//
#ifndef __vtkSMXML_PeanoReader_h
#define __vtkSMXML_PeanoReader_h

#include <string.h>
#include <cassert>
#include <algorithm>


// From file /home/dan/Documents/Masters/vtkPlugin/source/vtkPeanoReader.xml
static const char* const PeanoReadervtkPeanoReaderInterfaces0 =
"<ServerManagerConfiguration>\n"
"  <ProxyGroup name=\"sources\">\n"
"   <SourceProxy name=\"PeanoReader\"\n"
"                class=\"vtkPeanoReader\"\n"
"                label=\"Peano reader\">\n"
"     <Documentation\n"
"       short_help=\"Read a Dan file.\"\n"
"       long_help=\"Read a Dan file.\">\n"
"       The Dan reader reads Dan files, and the output is a Dan. The default file extension is .dan.\n"
"     </Documentation>\n"
"     <StringVectorProperty\n"
"        name=\"FileName\"\n"
"        animateable=\"0\"\n"
"        command=\"SetFileName\"\n"
"        number_of_elements=\"1\">\n"
"        <FileListDomain name=\"files\"/>\n"
"        <Documentation>\n"
"          This property specifies the file name for the LAS reader.\n"
"        </Documentation>\n"
"     </StringVectorProperty>\n"
"     <Hints>\n"
"       <ReaderFactory extensions=\"peano-patch-file\"\n"
"                      file_description=\"Peano Patch File Format\" />\n"
"     </Hints>\n"
"   <!-- End LASReader -->\n"
"   </SourceProxy>\n"
"  </ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* PeanoReadervtkPeanoReaderInterfaces()
{

  const size_t len0 = strlen(PeanoReadervtkPeanoReaderInterfaces0);
  size_t len = ( 0
    + len0 );
  char* res = new char[ len + 1];
  size_t offset = 0;
  std::copy(PeanoReadervtkPeanoReaderInterfaces0, PeanoReadervtkPeanoReaderInterfaces0 + len0, res + offset); offset += len0;
  assert(offset == len);
  res[offset] = 0;
  return res;
}



#endif
